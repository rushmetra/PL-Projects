Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> Gramatica
Rule 1     Gramatica -> Lex Yacc
Rule 2     Lex -> % % PAL ListNewLines List Defs Erro
Rule 3     List -> Literals Ignore Tokens
Rule 4     Literals -> % PAL = SIMB ListNewLines
Rule 5     Ignore -> % PAL = SIMB ListNewLines
Rule 6     Tokens -> % PAL = ListTokens ListNewLines
Rule 7     ListTokens -> [ TOKEN ListTokens ]
Rule 8     ListTokens -> , TOKEN
Rule 9     ListTokens -> <empty>
Rule 10    Defs -> Def Defs
Rule 11    Defs -> <empty>
Rule 12    Def -> SIMB PAL { TOKEN , PAL Fim } ListNewLines
Rule 13    Erro -> - PAL SIMB , PAL Fim ) ListNewLines
Rule 14    Yacc -> % % PAL ListNewLines Precedence Gramar Code
Rule 15    Precedence -> % PAL = [ ListNewLines ListPrecedence ] ListNewLines
Rule 16    ListPrecedence -> PRECEDENCE , ListNewLines ListPrecedence
Rule 17    ListPrecedence -> <empty>
Rule 18    Gramar -> Productions Gramar
Rule 19    Gramar -> <empty>
Rule 20    Productions -> PAL : Exp { Id } ListNewLines
Rule 21    Exp -> PAL Exp
Rule 22    Exp -> TOKEN Exp
Rule 23    Exp -> % PAL Exp
Rule 24    Exp -> <empty>
Rule 25    Id -> Atr Math ListAtr Fim
Rule 26    Atr -> PAL [ Atr ]
Rule 27    Atr -> PAL
Rule 28    ListAtr -> Atr Math ListAtr
Rule 29    ListAtr -> <empty>
Rule 30    Fim -> )
Rule 31    Fim -> <empty>
Rule 32    Math -> =
Rule 33    Math -> +
Rule 34    Math -> -
Rule 35    Math -> *
Rule 36    Math -> /
Rule 37    Math -> _
Rule 38    ListNewLines -> NEWLINE ListNewLines
Rule 39    ListNewLines -> <empty>
Rule 40    Math -> = +
Rule 41    Math -> = -
Rule 42    Math -> <empty>
Rule 43    Code -> % % ListNewLines ListDefsCode
Rule 44    ListDefsCode -> DefsCode ListNewLines ListDefsCode
Rule 45    ListDefsCode -> <empty>
Rule 46    DefsCode -> PAL = PAL ) NEWLINE PAL SIMB ) ListNewLines
Rule 47    DefsCode -> PAL PAL Fim : NEWLINE ListLinhaCode
Rule 48    ListLinhaCode -> LinhaCode ListLinhaCode
Rule 49    ListLinhaCode -> <empty>
Rule 50    LinhaCode -> ListElem ) NEWLINE
Rule 51    ListElem -> Elem ListElem
Rule 52    ListElem -> <empty>
Rule 53    Elem -> PAL
Rule 54    Elem -> TOKEN
Rule 55    Elem -> SIMB
Rule 56    Elem -> :
Rule 57    Elem -> ,
Rule 58    Elem -> =

Terminals, with rules where they appear

%                    : 2 2 4 5 6 14 14 15 23 43 43
)                    : 13 30 46 46 50
*                    : 35
+                    : 33 40
,                    : 8 12 13 16 57
-                    : 13 34 41
/                    : 36
:                    : 20 47 56
=                    : 4 5 6 15 32 40 41 46 58
NEWLINE              : 38 46 47 50
PAL                  : 2 4 5 6 12 12 13 13 14 15 20 21 23 26 27 46 46 46 47 47 53
PRECEDENCE           : 16
SIMB                 : 4 5 12 13 46 55
TOKEN                : 7 8 12 22 54
[                    : 7 15 26
]                    : 7 15 26
_                    : 37
error                : 
{                    : 12 20
}                    : 12 20

Nonterminals, with rules where they appear

Atr                  : 25 26 28
Code                 : 14
Def                  : 10
Defs                 : 2 10
DefsCode             : 44
Elem                 : 51
Erro                 : 2
Exp                  : 20 21 22 23
Fim                  : 12 13 25 47
Gramar               : 14 18
Gramatica            : 0
Id                   : 20
Ignore               : 3
Lex                  : 1
LinhaCode            : 48
List                 : 2
ListAtr              : 25 28
ListDefsCode         : 43 44
ListElem             : 50 51
ListLinhaCode        : 47 48
ListNewLines         : 2 4 5 6 12 13 14 15 15 16 20 38 43 44 46
ListPrecedence       : 15 16
ListTokens           : 6 7
Literals             : 3
Math                 : 25 28
Precedence           : 14
Productions          : 18
Tokens               : 3
Yacc                 : 1

Parsing method: LALR

state 0

    (0) S' -> . Gramatica
    (1) Gramatica -> . Lex Yacc
    (2) Lex -> . % % PAL ListNewLines List Defs Erro

    %               shift and go to state 3

    Gramatica                      shift and go to state 1
    Lex                            shift and go to state 2

state 1

    (0) S' -> Gramatica .



state 2

    (1) Gramatica -> Lex . Yacc
    (14) Yacc -> . % % PAL ListNewLines Precedence Gramar Code

    %               shift and go to state 5

    Yacc                           shift and go to state 4

state 3

    (2) Lex -> % . % PAL ListNewLines List Defs Erro

    %               shift and go to state 6


state 4

    (1) Gramatica -> Lex Yacc .

    $end            reduce using rule 1 (Gramatica -> Lex Yacc .)


state 5

    (14) Yacc -> % . % PAL ListNewLines Precedence Gramar Code

    %               shift and go to state 7


state 6

    (2) Lex -> % % . PAL ListNewLines List Defs Erro

    PAL             shift and go to state 8


state 7

    (14) Yacc -> % % . PAL ListNewLines Precedence Gramar Code

    PAL             shift and go to state 9


state 8

    (2) Lex -> % % PAL . ListNewLines List Defs Erro
    (38) ListNewLines -> . NEWLINE ListNewLines
    (39) ListNewLines -> .

    NEWLINE         shift and go to state 11
    %               reduce using rule 39 (ListNewLines -> .)

    ListNewLines                   shift and go to state 10

state 9

    (14) Yacc -> % % PAL . ListNewLines Precedence Gramar Code
    (38) ListNewLines -> . NEWLINE ListNewLines
    (39) ListNewLines -> .

    NEWLINE         shift and go to state 11
    %               reduce using rule 39 (ListNewLines -> .)

    ListNewLines                   shift and go to state 12

state 10

    (2) Lex -> % % PAL ListNewLines . List Defs Erro
    (3) List -> . Literals Ignore Tokens
    (4) Literals -> . % PAL = SIMB ListNewLines

    %               shift and go to state 13

    List                           shift and go to state 14
    Literals                       shift and go to state 15

state 11

    (38) ListNewLines -> NEWLINE . ListNewLines
    (38) ListNewLines -> . NEWLINE ListNewLines
    (39) ListNewLines -> .

  ! shift/reduce conflict for NEWLINE resolved as shift
    NEWLINE         shift and go to state 11
    %               reduce using rule 39 (ListNewLines -> .)
    PRECEDENCE      reduce using rule 39 (ListNewLines -> .)
    ]               reduce using rule 39 (ListNewLines -> .)
    PAL             reduce using rule 39 (ListNewLines -> .)
    $end            reduce using rule 39 (ListNewLines -> .)
    SIMB            reduce using rule 39 (ListNewLines -> .)
    -               reduce using rule 39 (ListNewLines -> .)

  ! NEWLINE         [ reduce using rule 39 (ListNewLines -> .) ]

    ListNewLines                   shift and go to state 16

state 12

    (14) Yacc -> % % PAL ListNewLines . Precedence Gramar Code
    (15) Precedence -> . % PAL = [ ListNewLines ListPrecedence ] ListNewLines

    %               shift and go to state 17

    Precedence                     shift and go to state 18

state 13

    (4) Literals -> % . PAL = SIMB ListNewLines

    PAL             shift and go to state 19


state 14

    (2) Lex -> % % PAL ListNewLines List . Defs Erro
    (10) Defs -> . Def Defs
    (11) Defs -> .
    (12) Def -> . SIMB PAL { TOKEN , PAL Fim } ListNewLines

    -               reduce using rule 11 (Defs -> .)
    SIMB            shift and go to state 22

    Defs                           shift and go to state 20
    Def                            shift and go to state 21

state 15

    (3) List -> Literals . Ignore Tokens
    (5) Ignore -> . % PAL = SIMB ListNewLines

    %               shift and go to state 24

    Ignore                         shift and go to state 23

state 16

    (38) ListNewLines -> NEWLINE ListNewLines .

    %               reduce using rule 38 (ListNewLines -> NEWLINE ListNewLines .)
    PRECEDENCE      reduce using rule 38 (ListNewLines -> NEWLINE ListNewLines .)
    ]               reduce using rule 38 (ListNewLines -> NEWLINE ListNewLines .)
    PAL             reduce using rule 38 (ListNewLines -> NEWLINE ListNewLines .)
    $end            reduce using rule 38 (ListNewLines -> NEWLINE ListNewLines .)
    SIMB            reduce using rule 38 (ListNewLines -> NEWLINE ListNewLines .)
    -               reduce using rule 38 (ListNewLines -> NEWLINE ListNewLines .)
    NEWLINE         reduce using rule 38 (ListNewLines -> NEWLINE ListNewLines .)


state 17

    (15) Precedence -> % . PAL = [ ListNewLines ListPrecedence ] ListNewLines

    PAL             shift and go to state 25


state 18

    (14) Yacc -> % % PAL ListNewLines Precedence . Gramar Code
    (18) Gramar -> . Productions Gramar
    (19) Gramar -> .
    (20) Productions -> . PAL : Exp { Id } ListNewLines

    %               reduce using rule 19 (Gramar -> .)
    PAL             shift and go to state 26

    Gramar                         shift and go to state 27
    Productions                    shift and go to state 28

state 19

    (4) Literals -> % PAL . = SIMB ListNewLines

    =               shift and go to state 29


state 20

    (2) Lex -> % % PAL ListNewLines List Defs . Erro
    (13) Erro -> . - PAL SIMB , PAL Fim ) ListNewLines

    -               shift and go to state 31

    Erro                           shift and go to state 30

state 21

    (10) Defs -> Def . Defs
    (10) Defs -> . Def Defs
    (11) Defs -> .
    (12) Def -> . SIMB PAL { TOKEN , PAL Fim } ListNewLines

    -               reduce using rule 11 (Defs -> .)
    SIMB            shift and go to state 22

    Def                            shift and go to state 21
    Defs                           shift and go to state 32

state 22

    (12) Def -> SIMB . PAL { TOKEN , PAL Fim } ListNewLines

    PAL             shift and go to state 33


state 23

    (3) List -> Literals Ignore . Tokens
    (6) Tokens -> . % PAL = ListTokens ListNewLines

    %               shift and go to state 35

    Tokens                         shift and go to state 34

state 24

    (5) Ignore -> % . PAL = SIMB ListNewLines

    PAL             shift and go to state 36


state 25

    (15) Precedence -> % PAL . = [ ListNewLines ListPrecedence ] ListNewLines

    =               shift and go to state 37


state 26

    (20) Productions -> PAL . : Exp { Id } ListNewLines

    :               shift and go to state 38


state 27

    (14) Yacc -> % % PAL ListNewLines Precedence Gramar . Code
    (43) Code -> . % % ListNewLines ListDefsCode

    %               shift and go to state 39

    Code                           shift and go to state 40

state 28

    (18) Gramar -> Productions . Gramar
    (18) Gramar -> . Productions Gramar
    (19) Gramar -> .
    (20) Productions -> . PAL : Exp { Id } ListNewLines

    %               reduce using rule 19 (Gramar -> .)
    PAL             shift and go to state 26

    Productions                    shift and go to state 28
    Gramar                         shift and go to state 41

state 29

    (4) Literals -> % PAL = . SIMB ListNewLines

    SIMB            shift and go to state 42


state 30

    (2) Lex -> % % PAL ListNewLines List Defs Erro .

    %               reduce using rule 2 (Lex -> % % PAL ListNewLines List Defs Erro .)


state 31

    (13) Erro -> - . PAL SIMB , PAL Fim ) ListNewLines

    PAL             shift and go to state 43


state 32

    (10) Defs -> Def Defs .

    -               reduce using rule 10 (Defs -> Def Defs .)


state 33

    (12) Def -> SIMB PAL . { TOKEN , PAL Fim } ListNewLines

    {               shift and go to state 44


state 34

    (3) List -> Literals Ignore Tokens .

    SIMB            reduce using rule 3 (List -> Literals Ignore Tokens .)
    -               reduce using rule 3 (List -> Literals Ignore Tokens .)


state 35

    (6) Tokens -> % . PAL = ListTokens ListNewLines

    PAL             shift and go to state 45


state 36

    (5) Ignore -> % PAL . = SIMB ListNewLines

    =               shift and go to state 46


state 37

    (15) Precedence -> % PAL = . [ ListNewLines ListPrecedence ] ListNewLines

    [               shift and go to state 47


state 38

    (20) Productions -> PAL : . Exp { Id } ListNewLines
    (21) Exp -> . PAL Exp
    (22) Exp -> . TOKEN Exp
    (23) Exp -> . % PAL Exp
    (24) Exp -> .

    PAL             shift and go to state 48
    TOKEN           shift and go to state 50
    %               shift and go to state 51
    {               reduce using rule 24 (Exp -> .)

    Exp                            shift and go to state 49

state 39

    (43) Code -> % . % ListNewLines ListDefsCode

    %               shift and go to state 52


state 40

    (14) Yacc -> % % PAL ListNewLines Precedence Gramar Code .

    $end            reduce using rule 14 (Yacc -> % % PAL ListNewLines Precedence Gramar Code .)


state 41

    (18) Gramar -> Productions Gramar .

    %               reduce using rule 18 (Gramar -> Productions Gramar .)


state 42

    (4) Literals -> % PAL = SIMB . ListNewLines
    (38) ListNewLines -> . NEWLINE ListNewLines
    (39) ListNewLines -> .

    NEWLINE         shift and go to state 11
    %               reduce using rule 39 (ListNewLines -> .)

    ListNewLines                   shift and go to state 53

state 43

    (13) Erro -> - PAL . SIMB , PAL Fim ) ListNewLines

    SIMB            shift and go to state 54


state 44

    (12) Def -> SIMB PAL { . TOKEN , PAL Fim } ListNewLines

    TOKEN           shift and go to state 55


state 45

    (6) Tokens -> % PAL . = ListTokens ListNewLines

    =               shift and go to state 56


state 46

    (5) Ignore -> % PAL = . SIMB ListNewLines

    SIMB            shift and go to state 57


state 47

    (15) Precedence -> % PAL = [ . ListNewLines ListPrecedence ] ListNewLines
    (38) ListNewLines -> . NEWLINE ListNewLines
    (39) ListNewLines -> .

    NEWLINE         shift and go to state 11
    PRECEDENCE      reduce using rule 39 (ListNewLines -> .)
    ]               reduce using rule 39 (ListNewLines -> .)

    ListNewLines                   shift and go to state 58

state 48

    (21) Exp -> PAL . Exp
    (21) Exp -> . PAL Exp
    (22) Exp -> . TOKEN Exp
    (23) Exp -> . % PAL Exp
    (24) Exp -> .

    PAL             shift and go to state 48
    TOKEN           shift and go to state 50
    %               shift and go to state 51
    {               reduce using rule 24 (Exp -> .)

    Exp                            shift and go to state 59

state 49

    (20) Productions -> PAL : Exp . { Id } ListNewLines

    {               shift and go to state 60


state 50

    (22) Exp -> TOKEN . Exp
    (21) Exp -> . PAL Exp
    (22) Exp -> . TOKEN Exp
    (23) Exp -> . % PAL Exp
    (24) Exp -> .

    PAL             shift and go to state 48
    TOKEN           shift and go to state 50
    %               shift and go to state 51
    {               reduce using rule 24 (Exp -> .)

    Exp                            shift and go to state 61

state 51

    (23) Exp -> % . PAL Exp

    PAL             shift and go to state 62


state 52

    (43) Code -> % % . ListNewLines ListDefsCode
    (38) ListNewLines -> . NEWLINE ListNewLines
    (39) ListNewLines -> .

    NEWLINE         shift and go to state 11
    PAL             reduce using rule 39 (ListNewLines -> .)
    $end            reduce using rule 39 (ListNewLines -> .)

    ListNewLines                   shift and go to state 63

state 53

    (4) Literals -> % PAL = SIMB ListNewLines .

    %               reduce using rule 4 (Literals -> % PAL = SIMB ListNewLines .)


state 54

    (13) Erro -> - PAL SIMB . , PAL Fim ) ListNewLines

    ,               shift and go to state 64


state 55

    (12) Def -> SIMB PAL { TOKEN . , PAL Fim } ListNewLines

    ,               shift and go to state 65


state 56

    (6) Tokens -> % PAL = . ListTokens ListNewLines
    (7) ListTokens -> . [ TOKEN ListTokens ]
    (8) ListTokens -> . , TOKEN
    (9) ListTokens -> .

    [               shift and go to state 67
    ,               shift and go to state 68
    NEWLINE         reduce using rule 9 (ListTokens -> .)
    SIMB            reduce using rule 9 (ListTokens -> .)
    -               reduce using rule 9 (ListTokens -> .)

    ListTokens                     shift and go to state 66

state 57

    (5) Ignore -> % PAL = SIMB . ListNewLines
    (38) ListNewLines -> . NEWLINE ListNewLines
    (39) ListNewLines -> .

    NEWLINE         shift and go to state 11
    %               reduce using rule 39 (ListNewLines -> .)

    ListNewLines                   shift and go to state 69

state 58

    (15) Precedence -> % PAL = [ ListNewLines . ListPrecedence ] ListNewLines
    (16) ListPrecedence -> . PRECEDENCE , ListNewLines ListPrecedence
    (17) ListPrecedence -> .

    PRECEDENCE      shift and go to state 71
    ]               reduce using rule 17 (ListPrecedence -> .)

    ListPrecedence                 shift and go to state 70

state 59

    (21) Exp -> PAL Exp .

    {               reduce using rule 21 (Exp -> PAL Exp .)


state 60

    (20) Productions -> PAL : Exp { . Id } ListNewLines
    (25) Id -> . Atr Math ListAtr Fim
    (26) Atr -> . PAL [ Atr ]
    (27) Atr -> . PAL

    PAL             shift and go to state 72

    Id                             shift and go to state 73
    Atr                            shift and go to state 74

state 61

    (22) Exp -> TOKEN Exp .

    {               reduce using rule 22 (Exp -> TOKEN Exp .)


state 62

    (23) Exp -> % PAL . Exp
    (21) Exp -> . PAL Exp
    (22) Exp -> . TOKEN Exp
    (23) Exp -> . % PAL Exp
    (24) Exp -> .

    PAL             shift and go to state 48
    TOKEN           shift and go to state 50
    %               shift and go to state 51
    {               reduce using rule 24 (Exp -> .)

    Exp                            shift and go to state 75

state 63

    (43) Code -> % % ListNewLines . ListDefsCode
    (44) ListDefsCode -> . DefsCode ListNewLines ListDefsCode
    (45) ListDefsCode -> .
    (46) DefsCode -> . PAL = PAL ) NEWLINE PAL SIMB ) ListNewLines
    (47) DefsCode -> . PAL PAL Fim : NEWLINE ListLinhaCode

    $end            reduce using rule 45 (ListDefsCode -> .)
    PAL             shift and go to state 78

    ListDefsCode                   shift and go to state 76
    DefsCode                       shift and go to state 77

state 64

    (13) Erro -> - PAL SIMB , . PAL Fim ) ListNewLines

    PAL             shift and go to state 79


state 65

    (12) Def -> SIMB PAL { TOKEN , . PAL Fim } ListNewLines

    PAL             shift and go to state 80


state 66

    (6) Tokens -> % PAL = ListTokens . ListNewLines
    (38) ListNewLines -> . NEWLINE ListNewLines
    (39) ListNewLines -> .

    NEWLINE         shift and go to state 11
    SIMB            reduce using rule 39 (ListNewLines -> .)
    -               reduce using rule 39 (ListNewLines -> .)

    ListNewLines                   shift and go to state 81

state 67

    (7) ListTokens -> [ . TOKEN ListTokens ]

    TOKEN           shift and go to state 82


state 68

    (8) ListTokens -> , . TOKEN

    TOKEN           shift and go to state 83


state 69

    (5) Ignore -> % PAL = SIMB ListNewLines .

    %               reduce using rule 5 (Ignore -> % PAL = SIMB ListNewLines .)


state 70

    (15) Precedence -> % PAL = [ ListNewLines ListPrecedence . ] ListNewLines

    ]               shift and go to state 84


state 71

    (16) ListPrecedence -> PRECEDENCE . , ListNewLines ListPrecedence

    ,               shift and go to state 85


state 72

    (26) Atr -> PAL . [ Atr ]
    (27) Atr -> PAL .

    [               shift and go to state 86
    =               reduce using rule 27 (Atr -> PAL .)
    +               reduce using rule 27 (Atr -> PAL .)
    -               reduce using rule 27 (Atr -> PAL .)
    *               reduce using rule 27 (Atr -> PAL .)
    /               reduce using rule 27 (Atr -> PAL .)
    _               reduce using rule 27 (Atr -> PAL .)
    PAL             reduce using rule 27 (Atr -> PAL .)
    )               reduce using rule 27 (Atr -> PAL .)
    }               reduce using rule 27 (Atr -> PAL .)
    ]               reduce using rule 27 (Atr -> PAL .)


state 73

    (20) Productions -> PAL : Exp { Id . } ListNewLines

    }               shift and go to state 87


state 74

    (25) Id -> Atr . Math ListAtr Fim
    (32) Math -> . =
    (33) Math -> . +
    (34) Math -> . -
    (35) Math -> . *
    (36) Math -> . /
    (37) Math -> . _
    (40) Math -> . = +
    (41) Math -> . = -
    (42) Math -> .

    =               shift and go to state 89
    +               shift and go to state 90
    -               shift and go to state 91
    *               shift and go to state 92
    /               shift and go to state 93
    _               shift and go to state 94
    PAL             reduce using rule 42 (Math -> .)
    )               reduce using rule 42 (Math -> .)
    }               reduce using rule 42 (Math -> .)

    Math                           shift and go to state 88

state 75

    (23) Exp -> % PAL Exp .

    {               reduce using rule 23 (Exp -> % PAL Exp .)


state 76

    (43) Code -> % % ListNewLines ListDefsCode .

    $end            reduce using rule 43 (Code -> % % ListNewLines ListDefsCode .)


state 77

    (44) ListDefsCode -> DefsCode . ListNewLines ListDefsCode
    (38) ListNewLines -> . NEWLINE ListNewLines
    (39) ListNewLines -> .

    NEWLINE         shift and go to state 11
    PAL             reduce using rule 39 (ListNewLines -> .)
    $end            reduce using rule 39 (ListNewLines -> .)

    ListNewLines                   shift and go to state 95

state 78

    (46) DefsCode -> PAL . = PAL ) NEWLINE PAL SIMB ) ListNewLines
    (47) DefsCode -> PAL . PAL Fim : NEWLINE ListLinhaCode

    =               shift and go to state 97
    PAL             shift and go to state 96


state 79

    (13) Erro -> - PAL SIMB , PAL . Fim ) ListNewLines
    (30) Fim -> . )
    (31) Fim -> .

  ! shift/reduce conflict for ) resolved as shift
    )               shift and go to state 99

  ! )               [ reduce using rule 31 (Fim -> .) ]

    Fim                            shift and go to state 98

state 80

    (12) Def -> SIMB PAL { TOKEN , PAL . Fim } ListNewLines
    (30) Fim -> . )
    (31) Fim -> .

    )               shift and go to state 99
    }               reduce using rule 31 (Fim -> .)

    Fim                            shift and go to state 100

state 81

    (6) Tokens -> % PAL = ListTokens ListNewLines .

    SIMB            reduce using rule 6 (Tokens -> % PAL = ListTokens ListNewLines .)
    -               reduce using rule 6 (Tokens -> % PAL = ListTokens ListNewLines .)


state 82

    (7) ListTokens -> [ TOKEN . ListTokens ]
    (7) ListTokens -> . [ TOKEN ListTokens ]
    (8) ListTokens -> . , TOKEN
    (9) ListTokens -> .

    [               shift and go to state 67
    ,               shift and go to state 68
    ]               reduce using rule 9 (ListTokens -> .)

    ListTokens                     shift and go to state 101

state 83

    (8) ListTokens -> , TOKEN .

    NEWLINE         reduce using rule 8 (ListTokens -> , TOKEN .)
    SIMB            reduce using rule 8 (ListTokens -> , TOKEN .)
    -               reduce using rule 8 (ListTokens -> , TOKEN .)
    ]               reduce using rule 8 (ListTokens -> , TOKEN .)


state 84

    (15) Precedence -> % PAL = [ ListNewLines ListPrecedence ] . ListNewLines
    (38) ListNewLines -> . NEWLINE ListNewLines
    (39) ListNewLines -> .

    NEWLINE         shift and go to state 11
    PAL             reduce using rule 39 (ListNewLines -> .)
    %               reduce using rule 39 (ListNewLines -> .)

    ListNewLines                   shift and go to state 102

state 85

    (16) ListPrecedence -> PRECEDENCE , . ListNewLines ListPrecedence
    (38) ListNewLines -> . NEWLINE ListNewLines
    (39) ListNewLines -> .

    NEWLINE         shift and go to state 11
    PRECEDENCE      reduce using rule 39 (ListNewLines -> .)
    ]               reduce using rule 39 (ListNewLines -> .)

    ListNewLines                   shift and go to state 103

state 86

    (26) Atr -> PAL [ . Atr ]
    (26) Atr -> . PAL [ Atr ]
    (27) Atr -> . PAL

    PAL             shift and go to state 72

    Atr                            shift and go to state 104

state 87

    (20) Productions -> PAL : Exp { Id } . ListNewLines
    (38) ListNewLines -> . NEWLINE ListNewLines
    (39) ListNewLines -> .

    NEWLINE         shift and go to state 11
    PAL             reduce using rule 39 (ListNewLines -> .)
    %               reduce using rule 39 (ListNewLines -> .)

    ListNewLines                   shift and go to state 105

state 88

    (25) Id -> Atr Math . ListAtr Fim
    (28) ListAtr -> . Atr Math ListAtr
    (29) ListAtr -> .
    (26) Atr -> . PAL [ Atr ]
    (27) Atr -> . PAL

    )               reduce using rule 29 (ListAtr -> .)
    }               reduce using rule 29 (ListAtr -> .)
    PAL             shift and go to state 72

    Atr                            shift and go to state 106
    ListAtr                        shift and go to state 107

state 89

    (32) Math -> = .
    (40) Math -> = . +
    (41) Math -> = . -

    PAL             reduce using rule 32 (Math -> = .)
    )               reduce using rule 32 (Math -> = .)
    }               reduce using rule 32 (Math -> = .)
    +               shift and go to state 108
    -               shift and go to state 109


state 90

    (33) Math -> + .

    PAL             reduce using rule 33 (Math -> + .)
    )               reduce using rule 33 (Math -> + .)
    }               reduce using rule 33 (Math -> + .)


state 91

    (34) Math -> - .

    PAL             reduce using rule 34 (Math -> - .)
    )               reduce using rule 34 (Math -> - .)
    }               reduce using rule 34 (Math -> - .)


state 92

    (35) Math -> * .

    PAL             reduce using rule 35 (Math -> * .)
    )               reduce using rule 35 (Math -> * .)
    }               reduce using rule 35 (Math -> * .)


state 93

    (36) Math -> / .

    PAL             reduce using rule 36 (Math -> / .)
    )               reduce using rule 36 (Math -> / .)
    }               reduce using rule 36 (Math -> / .)


state 94

    (37) Math -> _ .

    PAL             reduce using rule 37 (Math -> _ .)
    )               reduce using rule 37 (Math -> _ .)
    }               reduce using rule 37 (Math -> _ .)


state 95

    (44) ListDefsCode -> DefsCode ListNewLines . ListDefsCode
    (44) ListDefsCode -> . DefsCode ListNewLines ListDefsCode
    (45) ListDefsCode -> .
    (46) DefsCode -> . PAL = PAL ) NEWLINE PAL SIMB ) ListNewLines
    (47) DefsCode -> . PAL PAL Fim : NEWLINE ListLinhaCode

    $end            reduce using rule 45 (ListDefsCode -> .)
    PAL             shift and go to state 78

    DefsCode                       shift and go to state 77
    ListDefsCode                   shift and go to state 110

state 96

    (47) DefsCode -> PAL PAL . Fim : NEWLINE ListLinhaCode
    (30) Fim -> . )
    (31) Fim -> .

    )               shift and go to state 99
    :               reduce using rule 31 (Fim -> .)

    Fim                            shift and go to state 111

state 97

    (46) DefsCode -> PAL = . PAL ) NEWLINE PAL SIMB ) ListNewLines

    PAL             shift and go to state 112


state 98

    (13) Erro -> - PAL SIMB , PAL Fim . ) ListNewLines

    )               shift and go to state 113


state 99

    (30) Fim -> ) .

    )               reduce using rule 30 (Fim -> ) .)
    }               reduce using rule 30 (Fim -> ) .)
    :               reduce using rule 30 (Fim -> ) .)


state 100

    (12) Def -> SIMB PAL { TOKEN , PAL Fim . } ListNewLines

    }               shift and go to state 114


state 101

    (7) ListTokens -> [ TOKEN ListTokens . ]

    ]               shift and go to state 115


state 102

    (15) Precedence -> % PAL = [ ListNewLines ListPrecedence ] ListNewLines .

    PAL             reduce using rule 15 (Precedence -> % PAL = [ ListNewLines ListPrecedence ] ListNewLines .)
    %               reduce using rule 15 (Precedence -> % PAL = [ ListNewLines ListPrecedence ] ListNewLines .)


state 103

    (16) ListPrecedence -> PRECEDENCE , ListNewLines . ListPrecedence
    (16) ListPrecedence -> . PRECEDENCE , ListNewLines ListPrecedence
    (17) ListPrecedence -> .

    PRECEDENCE      shift and go to state 71
    ]               reduce using rule 17 (ListPrecedence -> .)

    ListPrecedence                 shift and go to state 116

state 104

    (26) Atr -> PAL [ Atr . ]

    ]               shift and go to state 117


state 105

    (20) Productions -> PAL : Exp { Id } ListNewLines .

    PAL             reduce using rule 20 (Productions -> PAL : Exp { Id } ListNewLines .)
    %               reduce using rule 20 (Productions -> PAL : Exp { Id } ListNewLines .)


state 106

    (28) ListAtr -> Atr . Math ListAtr
    (32) Math -> . =
    (33) Math -> . +
    (34) Math -> . -
    (35) Math -> . *
    (36) Math -> . /
    (37) Math -> . _
    (40) Math -> . = +
    (41) Math -> . = -
    (42) Math -> .

    =               shift and go to state 89
    +               shift and go to state 90
    -               shift and go to state 91
    *               shift and go to state 92
    /               shift and go to state 93
    _               shift and go to state 94
    PAL             reduce using rule 42 (Math -> .)
    )               reduce using rule 42 (Math -> .)
    }               reduce using rule 42 (Math -> .)

    Math                           shift and go to state 118

state 107

    (25) Id -> Atr Math ListAtr . Fim
    (30) Fim -> . )
    (31) Fim -> .

    )               shift and go to state 99
    }               reduce using rule 31 (Fim -> .)

    Fim                            shift and go to state 119

state 108

    (40) Math -> = + .

    PAL             reduce using rule 40 (Math -> = + .)
    )               reduce using rule 40 (Math -> = + .)
    }               reduce using rule 40 (Math -> = + .)


state 109

    (41) Math -> = - .

    PAL             reduce using rule 41 (Math -> = - .)
    )               reduce using rule 41 (Math -> = - .)
    }               reduce using rule 41 (Math -> = - .)


state 110

    (44) ListDefsCode -> DefsCode ListNewLines ListDefsCode .

    $end            reduce using rule 44 (ListDefsCode -> DefsCode ListNewLines ListDefsCode .)


state 111

    (47) DefsCode -> PAL PAL Fim . : NEWLINE ListLinhaCode

    :               shift and go to state 120


state 112

    (46) DefsCode -> PAL = PAL . ) NEWLINE PAL SIMB ) ListNewLines

    )               shift and go to state 121


state 113

    (13) Erro -> - PAL SIMB , PAL Fim ) . ListNewLines
    (38) ListNewLines -> . NEWLINE ListNewLines
    (39) ListNewLines -> .

    NEWLINE         shift and go to state 11
    %               reduce using rule 39 (ListNewLines -> .)

    ListNewLines                   shift and go to state 122

state 114

    (12) Def -> SIMB PAL { TOKEN , PAL Fim } . ListNewLines
    (38) ListNewLines -> . NEWLINE ListNewLines
    (39) ListNewLines -> .

    NEWLINE         shift and go to state 11
    SIMB            reduce using rule 39 (ListNewLines -> .)
    -               reduce using rule 39 (ListNewLines -> .)

    ListNewLines                   shift and go to state 123

state 115

    (7) ListTokens -> [ TOKEN ListTokens ] .

    NEWLINE         reduce using rule 7 (ListTokens -> [ TOKEN ListTokens ] .)
    SIMB            reduce using rule 7 (ListTokens -> [ TOKEN ListTokens ] .)
    -               reduce using rule 7 (ListTokens -> [ TOKEN ListTokens ] .)
    ]               reduce using rule 7 (ListTokens -> [ TOKEN ListTokens ] .)


state 116

    (16) ListPrecedence -> PRECEDENCE , ListNewLines ListPrecedence .

    ]               reduce using rule 16 (ListPrecedence -> PRECEDENCE , ListNewLines ListPrecedence .)


state 117

    (26) Atr -> PAL [ Atr ] .

    =               reduce using rule 26 (Atr -> PAL [ Atr ] .)
    +               reduce using rule 26 (Atr -> PAL [ Atr ] .)
    -               reduce using rule 26 (Atr -> PAL [ Atr ] .)
    *               reduce using rule 26 (Atr -> PAL [ Atr ] .)
    /               reduce using rule 26 (Atr -> PAL [ Atr ] .)
    _               reduce using rule 26 (Atr -> PAL [ Atr ] .)
    PAL             reduce using rule 26 (Atr -> PAL [ Atr ] .)
    )               reduce using rule 26 (Atr -> PAL [ Atr ] .)
    }               reduce using rule 26 (Atr -> PAL [ Atr ] .)
    ]               reduce using rule 26 (Atr -> PAL [ Atr ] .)


state 118

    (28) ListAtr -> Atr Math . ListAtr
    (28) ListAtr -> . Atr Math ListAtr
    (29) ListAtr -> .
    (26) Atr -> . PAL [ Atr ]
    (27) Atr -> . PAL

    )               reduce using rule 29 (ListAtr -> .)
    }               reduce using rule 29 (ListAtr -> .)
    PAL             shift and go to state 72

    Atr                            shift and go to state 106
    ListAtr                        shift and go to state 124

state 119

    (25) Id -> Atr Math ListAtr Fim .

    }               reduce using rule 25 (Id -> Atr Math ListAtr Fim .)


state 120

    (47) DefsCode -> PAL PAL Fim : . NEWLINE ListLinhaCode

    NEWLINE         shift and go to state 125


state 121

    (46) DefsCode -> PAL = PAL ) . NEWLINE PAL SIMB ) ListNewLines

    NEWLINE         shift and go to state 126


state 122

    (13) Erro -> - PAL SIMB , PAL Fim ) ListNewLines .

    %               reduce using rule 13 (Erro -> - PAL SIMB , PAL Fim ) ListNewLines .)


state 123

    (12) Def -> SIMB PAL { TOKEN , PAL Fim } ListNewLines .

    SIMB            reduce using rule 12 (Def -> SIMB PAL { TOKEN , PAL Fim } ListNewLines .)
    -               reduce using rule 12 (Def -> SIMB PAL { TOKEN , PAL Fim } ListNewLines .)


state 124

    (28) ListAtr -> Atr Math ListAtr .

    )               reduce using rule 28 (ListAtr -> Atr Math ListAtr .)
    }               reduce using rule 28 (ListAtr -> Atr Math ListAtr .)


state 125

    (47) DefsCode -> PAL PAL Fim : NEWLINE . ListLinhaCode
    (48) ListLinhaCode -> . LinhaCode ListLinhaCode
    (49) ListLinhaCode -> .
    (50) LinhaCode -> . ListElem ) NEWLINE
    (51) ListElem -> . Elem ListElem
    (52) ListElem -> .
    (53) Elem -> . PAL
    (54) Elem -> . TOKEN
    (55) Elem -> . SIMB
    (56) Elem -> . :
    (57) Elem -> . ,
    (58) Elem -> . =

  ! shift/reduce conflict for PAL resolved as shift
    NEWLINE         reduce using rule 49 (ListLinhaCode -> .)
    $end            reduce using rule 49 (ListLinhaCode -> .)
    )               reduce using rule 52 (ListElem -> .)
    PAL             shift and go to state 127
    TOKEN           shift and go to state 133
    SIMB            shift and go to state 134
    :               shift and go to state 128
    ,               shift and go to state 135
    =               shift and go to state 136

  ! PAL             [ reduce using rule 49 (ListLinhaCode -> .) ]

    ListLinhaCode                  shift and go to state 129
    LinhaCode                      shift and go to state 130
    ListElem                       shift and go to state 131
    Elem                           shift and go to state 132

state 126

    (46) DefsCode -> PAL = PAL ) NEWLINE . PAL SIMB ) ListNewLines

    PAL             shift and go to state 137


state 127

    (53) Elem -> PAL .

    PAL             reduce using rule 53 (Elem -> PAL .)
    TOKEN           reduce using rule 53 (Elem -> PAL .)
    SIMB            reduce using rule 53 (Elem -> PAL .)
    :               reduce using rule 53 (Elem -> PAL .)
    ,               reduce using rule 53 (Elem -> PAL .)
    =               reduce using rule 53 (Elem -> PAL .)
    )               reduce using rule 53 (Elem -> PAL .)


state 128

    (56) Elem -> : .

    PAL             reduce using rule 56 (Elem -> : .)
    TOKEN           reduce using rule 56 (Elem -> : .)
    SIMB            reduce using rule 56 (Elem -> : .)
    :               reduce using rule 56 (Elem -> : .)
    ,               reduce using rule 56 (Elem -> : .)
    =               reduce using rule 56 (Elem -> : .)
    )               reduce using rule 56 (Elem -> : .)


state 129

    (47) DefsCode -> PAL PAL Fim : NEWLINE ListLinhaCode .

    NEWLINE         reduce using rule 47 (DefsCode -> PAL PAL Fim : NEWLINE ListLinhaCode .)
    PAL             reduce using rule 47 (DefsCode -> PAL PAL Fim : NEWLINE ListLinhaCode .)
    $end            reduce using rule 47 (DefsCode -> PAL PAL Fim : NEWLINE ListLinhaCode .)


state 130

    (48) ListLinhaCode -> LinhaCode . ListLinhaCode
    (48) ListLinhaCode -> . LinhaCode ListLinhaCode
    (49) ListLinhaCode -> .
    (50) LinhaCode -> . ListElem ) NEWLINE
    (51) ListElem -> . Elem ListElem
    (52) ListElem -> .
    (53) Elem -> . PAL
    (54) Elem -> . TOKEN
    (55) Elem -> . SIMB
    (56) Elem -> . :
    (57) Elem -> . ,
    (58) Elem -> . =

  ! shift/reduce conflict for PAL resolved as shift
    NEWLINE         reduce using rule 49 (ListLinhaCode -> .)
    $end            reduce using rule 49 (ListLinhaCode -> .)
    )               reduce using rule 52 (ListElem -> .)
    PAL             shift and go to state 127
    TOKEN           shift and go to state 133
    SIMB            shift and go to state 134
    :               shift and go to state 128
    ,               shift and go to state 135
    =               shift and go to state 136

  ! PAL             [ reduce using rule 49 (ListLinhaCode -> .) ]

    LinhaCode                      shift and go to state 130
    ListLinhaCode                  shift and go to state 138
    ListElem                       shift and go to state 131
    Elem                           shift and go to state 132

state 131

    (50) LinhaCode -> ListElem . ) NEWLINE

    )               shift and go to state 139


state 132

    (51) ListElem -> Elem . ListElem
    (51) ListElem -> . Elem ListElem
    (52) ListElem -> .
    (53) Elem -> . PAL
    (54) Elem -> . TOKEN
    (55) Elem -> . SIMB
    (56) Elem -> . :
    (57) Elem -> . ,
    (58) Elem -> . =

    )               reduce using rule 52 (ListElem -> .)
    PAL             shift and go to state 127
    TOKEN           shift and go to state 133
    SIMB            shift and go to state 134
    :               shift and go to state 128
    ,               shift and go to state 135
    =               shift and go to state 136

    Elem                           shift and go to state 132
    ListElem                       shift and go to state 140

state 133

    (54) Elem -> TOKEN .

    PAL             reduce using rule 54 (Elem -> TOKEN .)
    TOKEN           reduce using rule 54 (Elem -> TOKEN .)
    SIMB            reduce using rule 54 (Elem -> TOKEN .)
    :               reduce using rule 54 (Elem -> TOKEN .)
    ,               reduce using rule 54 (Elem -> TOKEN .)
    =               reduce using rule 54 (Elem -> TOKEN .)
    )               reduce using rule 54 (Elem -> TOKEN .)


state 134

    (55) Elem -> SIMB .

    PAL             reduce using rule 55 (Elem -> SIMB .)
    TOKEN           reduce using rule 55 (Elem -> SIMB .)
    SIMB            reduce using rule 55 (Elem -> SIMB .)
    :               reduce using rule 55 (Elem -> SIMB .)
    ,               reduce using rule 55 (Elem -> SIMB .)
    =               reduce using rule 55 (Elem -> SIMB .)
    )               reduce using rule 55 (Elem -> SIMB .)


state 135

    (57) Elem -> , .

    PAL             reduce using rule 57 (Elem -> , .)
    TOKEN           reduce using rule 57 (Elem -> , .)
    SIMB            reduce using rule 57 (Elem -> , .)
    :               reduce using rule 57 (Elem -> , .)
    ,               reduce using rule 57 (Elem -> , .)
    =               reduce using rule 57 (Elem -> , .)
    )               reduce using rule 57 (Elem -> , .)


state 136

    (58) Elem -> = .

    PAL             reduce using rule 58 (Elem -> = .)
    TOKEN           reduce using rule 58 (Elem -> = .)
    SIMB            reduce using rule 58 (Elem -> = .)
    :               reduce using rule 58 (Elem -> = .)
    ,               reduce using rule 58 (Elem -> = .)
    =               reduce using rule 58 (Elem -> = .)
    )               reduce using rule 58 (Elem -> = .)


state 137

    (46) DefsCode -> PAL = PAL ) NEWLINE PAL . SIMB ) ListNewLines

    SIMB            shift and go to state 141


state 138

    (48) ListLinhaCode -> LinhaCode ListLinhaCode .

    NEWLINE         reduce using rule 48 (ListLinhaCode -> LinhaCode ListLinhaCode .)
    PAL             reduce using rule 48 (ListLinhaCode -> LinhaCode ListLinhaCode .)
    $end            reduce using rule 48 (ListLinhaCode -> LinhaCode ListLinhaCode .)


state 139

    (50) LinhaCode -> ListElem ) . NEWLINE

    NEWLINE         shift and go to state 142


state 140

    (51) ListElem -> Elem ListElem .

    )               reduce using rule 51 (ListElem -> Elem ListElem .)


state 141

    (46) DefsCode -> PAL = PAL ) NEWLINE PAL SIMB . ) ListNewLines

    )               shift and go to state 143


state 142

    (50) LinhaCode -> ListElem ) NEWLINE .

    PAL             reduce using rule 50 (LinhaCode -> ListElem ) NEWLINE .)
    TOKEN           reduce using rule 50 (LinhaCode -> ListElem ) NEWLINE .)
    SIMB            reduce using rule 50 (LinhaCode -> ListElem ) NEWLINE .)
    :               reduce using rule 50 (LinhaCode -> ListElem ) NEWLINE .)
    ,               reduce using rule 50 (LinhaCode -> ListElem ) NEWLINE .)
    =               reduce using rule 50 (LinhaCode -> ListElem ) NEWLINE .)
    )               reduce using rule 50 (LinhaCode -> ListElem ) NEWLINE .)
    NEWLINE         reduce using rule 50 (LinhaCode -> ListElem ) NEWLINE .)
    $end            reduce using rule 50 (LinhaCode -> ListElem ) NEWLINE .)


state 143

    (46) DefsCode -> PAL = PAL ) NEWLINE PAL SIMB ) . ListNewLines
    (38) ListNewLines -> . NEWLINE ListNewLines
    (39) ListNewLines -> .

  ! shift/reduce conflict for NEWLINE resolved as shift
    NEWLINE         shift and go to state 11
    PAL             reduce using rule 39 (ListNewLines -> .)
    $end            reduce using rule 39 (ListNewLines -> .)

  ! NEWLINE         [ reduce using rule 39 (ListNewLines -> .) ]

    ListNewLines                   shift and go to state 144

state 144

    (46) DefsCode -> PAL = PAL ) NEWLINE PAL SIMB ) ListNewLines .

    NEWLINE         reduce using rule 46 (DefsCode -> PAL = PAL ) NEWLINE PAL SIMB ) ListNewLines .)
    PAL             reduce using rule 46 (DefsCode -> PAL = PAL ) NEWLINE PAL SIMB ) ListNewLines .)
    $end            reduce using rule 46 (DefsCode -> PAL = PAL ) NEWLINE PAL SIMB ) ListNewLines .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for NEWLINE in state 11 resolved as shift
WARNING: shift/reduce conflict for ) in state 79 resolved as shift
WARNING: shift/reduce conflict for PAL in state 125 resolved as shift
WARNING: shift/reduce conflict for PAL in state 130 resolved as shift
WARNING: shift/reduce conflict for NEWLINE in state 143 resolved as shift
