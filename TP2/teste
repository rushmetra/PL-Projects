%% LEX
%literals = "+-/*=()"
%ignore = "\t\n"
%tokens =  [ 'VAR','NUMBER' ]

"[a-zA-Z_][a-zA-Z0-9_]*"     return{'VAR', t.value}
"\d+(\.\d+)?" 		     return{'NUMBER', float(t.value)}
_ 			     error(f"Illegal character '{t.value[0]}', [{t.lexer.lineno}]",t.lexer.skip(1))

%% YACC

%precedence = [
	('left','+','-'),
	('left','*','/'),
	('right','UMINUS'),
	]
	
stat : VAR '=' exp { ts[t[1]] = t[3] }
stat : exp  { print(t[1]) }
exp : exp '+' exp { t[0] = t[1] + t[3] }
exp : exp '-' exp { t[0] = t[1] - t[3] }
exp : exp '*' exp { t[0] = t[1] * t[3] }
exp : exp '/' exp { t[0] = t[1] / t[3] }
exp : '-' exp %prec UMINUS { t[0] = -t[2] }
exp : '(' exp ')' { t[0] = t[2] }
exp : NUMBER { t[0] = t[1] }
exp : VAR { t[0] = getval(t[1]) }

